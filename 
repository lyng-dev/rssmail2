[1mdiff --git a/src/main/java/com/rssmail/App.java b/src/main/java/com/rssmail/App.java[m
[1mindex f057038..955e2e0 100644[m
[1m--- a/src/main/java/com/rssmail/App.java[m
[1m+++ b/src/main/java/com/rssmail/App.java[m
[36m@@ -33,13 +33,6 @@[m [mpublic class App {[m
 		} catch (Exception e) {[m
 			System.out.println("something failed");[m
 		}[m
[31m-		// ArrayList<String> dataBlocks = new ArrayList<>();[m
[31m-		// dataBlocks.add("Captain America");[m
[31m-		// dataBlocks.add("Iron Man");[m
[31m-		// dataBlocks.add("God of thunder");[m
[31m-		// dataBlocks.add("Doctor strange");[m
[31m-		// Node root = MerkleTree.generateTree(dataBlocks);[m
[31m-		// printLevelOrderTraversal(root);[m
 	}[m
 [m
   // private static void printLevelOrderTraversal(Node root) {[m
[1mdiff --git a/src/main/java/com/rssmail/scheduler/jobs/ReadRssFeedJob.java b/src/main/java/com/rssmail/scheduler/jobs/ReadRssFeedJob.java[m
[1mindex baeebfc..b14451e 100644[m
[1m--- a/src/main/java/com/rssmail/scheduler/jobs/ReadRssFeedJob.java[m
[1m+++ b/src/main/java/com/rssmail/scheduler/jobs/ReadRssFeedJob.java[m
[36m@@ -1,8 +1,15 @@[m
 package com.rssmail.scheduler.jobs;[m
 [m
 import java.io.IOException;[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.LinkedList;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m[32mimport java.util.Queue;[m
[32m+[m
 import com.rometools.rome.io.FeedException;[m
 import com.rssmail.services.RssService.RssService;[m
[32m+[m[32mimport com.rssmail.utils.hashing.Node;[m
[32m+[m
 import org.quartz.Job;[m
 import org.quartz.JobExecutionContext;[m
 import org.quartz.JobExecutionException;[m
[36m@@ -24,7 +31,14 @@[m [mpublic class ReadRssFeedJob implements Job {[m
       final var feedUrl = jobDataMap.get("feedUrl").toString();[m
 [m
       //extract feed[m
[31m-      System.out.println(String.format("\n------------------\n%s", rssService.read(feedUrl)));[m
[32m+[m[32m      final var feedItems = rssService.getFeed(feedUrl);[m
[32m+[m
[32m+[m[32m      //map feeditems to merkle trees for quick comparison[m
[32m+[m[32m      final var feedItemHashes = feedItems.stream().map(i -> i.getHash()).toList();[m
[32m+[m
[32m+[m[32m      //loop through fake history, and remove from new feed, leaving behind only new items[m
[32m+[m[32m      //var isUnchanged = fakeHistoryItemHashes.containsAll(feedItemHashes);[m
[32m+[m
     } catch (IllegalArgumentException | FeedException | IOException e) {[m
       e.printStackTrace();[m
     }[m
[1mdiff --git a/src/main/java/com/rssmail/services/RssService/RssService.java b/src/main/java/com/rssmail/services/RssService/RssService.java[m
[1mindex 11c5c8e..2e84e06 100644[m
[1m--- a/src/main/java/com/rssmail/services/RssService/RssService.java[m
[1m+++ b/src/main/java/com/rssmail/services/RssService/RssService.java[m
[36m@@ -2,30 +2,57 @@[m [mpackage com.rssmail.services.RssService;[m
 [m
 import java.io.IOException;[m
 import java.net.URL;[m
[32m+[m[32mimport java.util.ArrayList;[m
 import java.util.Date;[m
 import java.util.Locale;[m
 import java.util.stream.Collectors;[m
 [m
[32m+[m[32mimport com.rometools.rome.feed.synd.SyndEntry;[m
 import com.rometools.rome.feed.synd.SyndFeed;[m
 import com.rometools.rome.io.FeedException;[m
 import com.rometools.rome.io.SyndFeedInput;[m
 import com.rometools.rome.io.XmlReader;[m
[32m+[m[32mimport com.rssmail.models.FeedItem;[m
[32m+[m[32mimport com.rssmail.utils.hashing.MerkleTree;[m
[32m+[m
 import org.springframework.stereotype.Service;[m
 [m
 [m
 [m
 @Service[m
 public class RssService {[m
[31m-  public String read(String feedUrl) throws IllegalArgumentException, FeedException, IOException {[m
[31m-    //require that RSS Feed supports pubdate, else throw PubDateRequiredException[m
[32m+[m
[32m+[m[41m  [m
[32m+[m
[32m+[m[32m  public RssService(MerkleTree merkleTree) {[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  public ArrayList<FeedItem> getFeed(String feedUrl) throws IllegalArgumentException, FeedException, IOException {[m
     URL feedSource = new URL(feedUrl);[m
     SyndFeedInput input = new SyndFeedInput();[m
     SyndFeed feed = input.build(new XmlReader(feedSource));[m
     var entries = feed.getEntries();[m
 [m
[32m+[m[32m    return new ArrayList<FeedItem>(entries.stream().map(e -> mapSyndEntryToFeedItem(e)).toList());[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  private FeedItem mapSyndEntryToFeedItem(SyndEntry item) {[m
[32m+[m
[32m+[m[32m    final var feedItem = new FeedItem();[m
[32m+[m[32m    if (item.getUri().length() > 0) feedItem.setUri(item.getUri());[m
[32m+[m[32m    if (item.getTitle().length() > 0) feedItem.setTitle(item.getTitle());[m
[32m+[m[32m    if (item.getLink().length() > 0) feedItem.setLink(item.getLink());[m
[32m+[m[32m    if (item.getPublishedDate() != null) feedItem.setPubDate(item.getPublishedDate().toString());[m
[32m+[m
[32m+[m[32m    final var dataBlocks = new ArrayList<String>();[m
[32m+[m[32m    if (feedItem.getUri().length() > 0) dataBlocks.add(feedItem.getUri());[m
[32m+[m[32m    if (feedItem.getTitle().length() > 0) dataBlocks.add(feedItem.getTitle());[m
[32m+[m[32m    if (feedItem.getLink().length() > 0) dataBlocks.add(feedItem.getTitle());[m
[32m+[m[32m    if (feedItem.getPubDate() != null) dataBlocks.add(feedItem.getPubDate());[m
[32m+[m
[32m+[m[32m    var tree = MerkleTree.generateTree(dataBlocks);[m
[32m+[m[32m    feedItem.setHash(tree.getHash());[m
 [m
[31m-    entries.stream().forEach(x -> System.out.println(String.format("%s - %s - %s",x.getTitle(), x.getLink(), x.getPublishedDate())));[m
[31m-    [m
[31m-    return "";[m
[32m+[m[32m    return feedItem;[m
   }[m
 }[m
[1mdiff --git a/src/main/java/com/rssmail/utils/hashing/MerkleTree.java b/src/main/java/com/rssmail/utils/hashing/MerkleTree.java[m
[1mindex cd43653..e225284 100644[m
[1m--- a/src/main/java/com/rssmail/utils/hashing/MerkleTree.java[m
[1m+++ b/src/main/java/com/rssmail/utils/hashing/MerkleTree.java[m
[36m@@ -4,6 +4,9 @@[m [mimport java.util.ArrayList;[m
 import java.util.LinkedList;[m
 import java.util.Queue;[m
 [m
[32m+[m[32mimport org.springframework.stereotype.Component;[m
[32m+[m
[32m+[m[32m@Component[m
 public class MerkleTree {[m
 [m
   public static Node generateTree(ArrayList<String> dataBlocks) {[m
